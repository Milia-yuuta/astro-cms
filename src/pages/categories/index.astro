---
import Layout from '../../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';

// In a real implementation, these would come from your D1 database
const categories = [
  { id: 1, name: 'Shonen', description: 'Manga aimed at teenage boys', mangaCount: 42 },
  { id: 2, name: 'Shojo', description: 'Manga aimed at teenage girls', mangaCount: 28 },
  { id: 3, name: 'Seinen', description: 'Manga aimed at adult men', mangaCount: 35 },
  { id: 4, name: 'Josei', description: 'Manga aimed at adult women', mangaCount: 19 },
  { id: 5, name: 'Adventure', description: 'Manga featuring adventures and journeys', mangaCount: 56 },
  { id: 6, name: 'Action', description: 'Manga with action sequences', mangaCount: 63 },
  { id: 7, name: 'Comedy', description: 'Humorous manga', mangaCount: 47 },
  { id: 8, name: 'Drama', description: 'Manga with dramatic storylines', mangaCount: 38 },
];
---

<Layout title="Category Management" currentPath="/categories">
  <div class="space-y-6">
    <!-- Header with add button -->
    <div class="flex justify-between items-center">
      <h2 class="text-xl font-medium text-gray-900">Categories</h2>
      <button
        id="add-category-btn"
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-[#4020e7] hover:bg-[#3010d7] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#4020e7]"
      >
        <Icon name="plus" class="h-5 w-5 mr-2" />
        Add Category
      </button>
    </div>

    <!-- Category list -->
    <div class="bg-white shadow rounded-lg overflow-hidden">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
        <tr>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Name
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Description
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Manga Count
          </th>
          <th scope="col" class="relative px-6 py-3">
            <span class="sr-only">Actions</span>
          </th>
        </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
        {categories.map((category) => (
          <tr>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="text-sm font-medium text-gray-900">{category.name}</div>
            </td>
            <td class="px-6 py-4">
              <div class="text-sm text-gray-500">{category.description}</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="text-sm text-gray-900">{category.mangaCount}</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
              <div class="flex space-x-2 justify-end">
                <button
                  class="edit-category-btn text-[#4020e7] hover:text-[#3010d7]"
                  data-id={category.id}
                  data-name={category.name}
                  data-description={category.description}
                >
                  <Icon name="edit" class="h-5 w-5" />
                  <span class="sr-only">Edit</span>
                </button>
                <button class="delete-category-btn text-red-600 hover:text-red-900" data-id={category.id}>
                  <Icon name="trash" class="h-5 w-5" />
                  <span class="sr-only">Delete</span>
                </button>
              </div>
            </td>
          </tr>
        ))}
        </tbody>
      </table>
    </div>
  </div>

  <!-- Add/Edit Category Modal -->
  <div id="category-modal" class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center hidden z-50">
    <div class="bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full">
      <form id="category-form">
        <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4" id="modal-title">Add Category</h3>
          <input type="hidden" id="category-id" value="" />
          <div class="space-y-4">
            <div>
              <label for="category-name" class="block text-sm font-medium text-gray-700">Name</label>
              <input
                type="text"
                name="name"
                id="category-name"
                class="mt-1 focus:ring-[#4020e7] focus:border-[#4020e7] block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                required
              />
            </div>
            <div>
              <label for="category-description" class="block text-sm font-medium text-gray-700">Description</label>
              <textarea
                name="description"
                id="category-description"
                rows="3"
                class="mt-1 focus:ring-[#4020e7] focus:border-[#4020e7] block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
              ></textarea>
            </div>
          </div>
        </div>
        <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
          <button
            type="submit"
            class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-[#4020e7] text-base font-medium text-white hover:bg-[#3010d7] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#4020e7] sm:ml-3 sm:w-auto sm:text-sm"
          >
            Save
          </button>
          <button
            type="button"
            id="cancel-btn"
            class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#4020e7] sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
          >
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="delete-modal" class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center hidden z-50">
    <div class="bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <Icon name="trash" class="h-6 w-6 text-red-600" />
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Delete Category</h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500">
                Are you sure you want to delete this category? This action cannot be undone.
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button
          type="button"
          id="confirm-delete-btn"
          class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm"
          data-id=""
        >
          Delete
        </button>
        <button
          type="button"
          id="cancel-delete-btn"
          class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#4020e7] sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
        >
          Cancel
        </button>
      </div>
    </div>
  </div>

  <script>
    // Modal functionality
    const categoryModal = document.getElementById('category-modal');
    const deleteModal = document.getElementById('delete-modal');
    const modalTitle = document.getElementById('modal-title');
    const categoryForm = document.getElementById('category-form');
    const categoryIdInput = document.getElementById('category-id');
    const categoryNameInput = document.getElementById('category-name');
    const categoryDescriptionInput = document.getElementById('category-description');
    const confirmDeleteBtn = document.getElementById('confirm-delete-btn');

    // Open add category modal
    document.getElementById('add-category-btn')?.addEventListener('click', () => {
      modalTitle.textContent = 'Add Category';
      categoryIdInput.value = '';
      categoryNameInput.value = '';
      categoryDescriptionInput.value = '';
      categoryModal.classList.remove('hidden');
    });

    // Open edit category modal
    document.querySelectorAll('.edit-category-btn').forEach(button => {
      button.addEventListener('click', function() {
        const id = this.getAttribute('data-id');
        const name = this.getAttribute('data-name');
        const description = this.getAttribute('data-description');

        modalTitle.textContent = 'Edit Category';
        categoryIdInput.value = id;
        categoryNameInput.value = name;
        categoryDescriptionInput.value = description;
        categoryModal.classList.remove('hidden');
      });
    });

    // Open delete confirmation modal
    document.querySelectorAll('.delete-category-btn').forEach(button => {
      button.addEventListener('click', function() {
        const id = this.getAttribute('data-id');
        confirmDeleteBtn.setAttribute('data-id', id);
        deleteModal.classList.remove('hidden');
      });
    });

    // Close modals
    document.getElementById('cancel-btn')?.addEventListener('click', () => {
      categoryModal.classList.add('hidden');
    });

    document.getElementById('cancel-delete-btn')?.addEventListener('click', () => {
      deleteModal.classList.add('hidden');
    });

    // Form submission
    categoryForm?.addEventListener('submit', (e) => {
      e.preventDefault();
      // In a real implementation, you would collect form data and submit it to your API
      alert('Category saved! In a real implementation, this would save to your D1 database.');
      categoryModal.classList.add('hidden');
    });

    // Delete confirmation
    confirmDeleteBtn?.addEventListener('click', function() {
      const id = this.getAttribute('data-id');
      // In a real implementation, you would send a delete request to your API
      alert(`Category ${id} deleted! In a real implementation, this would delete from your D1 database.`);
      deleteModal.classList.add('hidden');
    });
  </script>
</Layout>